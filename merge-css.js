/*
 * merge-css.js
 *
 * Auto-merges all .css files under src/styles into Global.module.css,
 * removes duplicate rules, and organizes code by file sectors with comments.
 *
 * Usage:
 *   1. Install dependencies: npm install glob postcss
 *   2. Run: node merge-css.js
 */

const fs = require('fs');
const path = require('path');
const glob = require('glob');
const postcss = require('postcss');

// Directory containing CSS files to merge
const stylesDir = path.resolve(__dirname, 'src/styles');
// Output merged CSS file
const outputFile = path.join(stylesDir, 'Global.module.css');

(async () => {
  try {
    // Find all .css files recursively
    const files = glob.sync('**/*.css', { cwd: stylesDir });
    const seen = new Set();
    let mergedCss = '/* Auto-generated by merge-css.js */\n';

    for (const relativePath of files) {
      const filePath = path.join(stylesDir, relativePath);
      const cssContent = fs.readFileSync(filePath, 'utf8');
      const root = postcss.parse(cssContent, { from: filePath });

      // Section comment for this file
      mergedCss += `\n/* ===== START ${relativePath} ===== */\n`;

      // Iterate over top-level nodes (rules, at-rules, etc.)
      root.nodes.forEach(node => {
        const text = node.toString().trim();
        if (text && !seen.has(text)) {
          seen.add(text);
          mergedCss += text + '\n';
        }
      });

      mergedCss += `/* ===== END ${relativePath} ===== */\n`;
    }

    // Write the merged CSS
    fs.writeFileSync(outputFile, mergedCss, 'utf8');
    console.log(`Merged CSS written to ${outputFile}`);
  } catch (err) {
    console.error('Error merging CSS:', err);
  }
})();
